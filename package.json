{
  "name": "SCLens",
  "displayName": "SCLens",
  "description": "SCLens is vscode extension to help more people interested in web3 create their first smart contract faster and easier.",
  "version": "0.0.1-beta",
  "engines": {
    "vscode": "^1.68.0"
  },
  "categories": [
    "Programming Languages",
    "Debuggers"
  ],
  "activationEvents": [
    "onLanguage:solidity"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Example configuration",
      "properties": {
        "languageServerExample.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "languageServerExample.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        }
      }
    },
    "debuggers": [
      {
        "type": "solidity",
        "languages": [
          "solidity"
        ],
        "label": "Solidity Debug",
        "program": "./out/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "compileError": {
                "type": "string",
                "description": "Simulates a compile error in 'launch' request.",
                "enum": [
                  "default",
                  "show",
                  "hide"
                ],
                "enumDescriptions": [
                  "default: show fake compile error to user",
                  "show fake compile error to user",
                  "do not show fake compile error to user"
                ]
              }
            }
          },
          "attach": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after attach.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "compileError": {
                "type": "string",
                "description": "Simulates a compile error in 'attach' request.",
                "enum": [
                  "default",
                  "show",
                  "hide"
                ],
                "enumDescriptions": [
                  "default: show fake compile error to user",
                  "show fake compile error to user",
                  "do not show fake compile error to user"
                ]
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "solidity",
            "request": "launch",
            "name": "Launch Solidity",
            "program": "${workspaceFolder}/${command:AskForProgramName}",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "Solidity Debug: Launch",
            "description": "A new configuration for 'debugging' a solidity file.",
            "body": {
              "type": "solidity",
              "request": "launch",
              "name": "Launch Solidity",
              "program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
              "stopOnEntry": true
            }
          }
        ],
        "variables": {
          "AskForProgramName": "scLens.debugConfig.getProgramName"
        }
      }
    ],
    "breakpoints": [
      {
        "language": "solidity"
      }
    ],
    "snippets": [
      {
        "language": "solidity",
        "path": "./extension/snippets/solidity.json"
      }
    ],
    "grammars": [
      {
        "language": "solidity",
        "scopeName": "source.solidity",
        "path": "./extension/syntaxes/solidity.json"
      }
    ],
    "languages": [
      {
        "id": "solidity",
        "aliases": [
          "Solidity",
          "solidity"
        ],
        "extensions": [
          ".sol"
        ],
        "configuration": "./solidity.configuration.json"
      }
    ],
    "commands": [
      {
        "command": "scLens.deployHistory.copyContractAddress",
        "title": "Copy Contract Address",
        "shortTitle": "Copy",
        "enablement": "view == scLens.deployHistoryTree && viewItem == contract",
        "icon": "asset/copy.svg",
        "when": "view == scLens.deployHistoryTree && viewItem == contract"
      },
      {
        "command": "scLens.deployHistory.debugContract",
        "title": "Debug Contract",
        "shortTitle": "Debug",
        "enablement": "view == scLens.deployHistoryTree && viewItem == contract",
        "icon": "asset/debug.svg",
        "when": "view == scLens.deployHistoryTree && viewItem == contract"
      },
      {
        "command": "scLens.deployHistory.copyTxHash",
        "title": "Copy Transaction Hash",
        "shortTitle": "Copy",
        "enablement": "view == scLens.deployHistoryTree && viewItem == transaction",
        "icon": "asset/copy.svg",
        "when": "view == scLens.deployHistoryTree && viewItem == transaction"
      },
      {
        "command": "scLens.deployHistory.debugTransaction",
        "title": "Debug Transaction",
        "shortTitle": "Debug",
        "enablement": "view == scLens.deployHistoryTree && viewItem == transaction",
        "icon": "asset/debug.svg",
        "when": "view == scLens.deployHistoryTree && viewItem == transaction"
      },
      {
        "command": "scLens.settings",
        "title": "SCLens Settings",
        "shortTitle": "Settings",
        "enablement": "view == scLens.settingsTree",
        "icon": "asset/settings.svg",
        "when": "view == scLens.settingsTree"
      },
      {
        "command": "scLens.settings.addAccount",
        "title": "Add Account Address",
        "shortTitle": "Account Address",
        "enablement": "view == scLens.settingsTree && viewItem == account",
        "icon": "asset/add.svg",
        "when": "view == scLens.settingsTree"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "scLens.deployHistory.copyContractAddress",
          "when": "view == scLens.deployHistoryTree && viewItem == contract",
          "group": "inline@2"
        },
        {
          "command": "scLens.deployHistory.debugContract",
          "when": "view == scLens.deployHistoryTree && viewItem == contract",
          "group": "inline@1"
        },
        {
          "command": "scLens.deployHistory.copyTxHash",
          "when": "view == scLens.deployHistoryTree && viewItem == transaction",
          "group": "inline@2"
        },
        {
          "command": "scLens.deployHistory.debugTransaction",
          "when": "view == scLens.deployHistoryTree && viewItem == transaction",
          "group": "inline@1"
        },
        {
          "command": "scLens.settings",
          "when": "view == scLens.settingsTree",
          "group": "inline@2"
        },
        {
          "command": "scLens.settings.addAccount",
          "when": "view == scLens.settingsTree && viewItem == account",
          "group": "inline@1"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sc-act-bar",
          "title": "SCLens",
          "icon": "asset/eth.svg"
        }
      ]
    },
    "views": {
      "sc-act-bar": [
        {
          "id": "scLens.settingsTree",
          "name": "Settings"
        }
      ],
      "debug": [
        {
          "id": "scLens.deployHistoryTree",
          "name": "Contract Deploy History",
          "when": "workspaceHasSolidity",
          "icon": "asset/smart_contract.svg",
          "contextualTitle": "Contract Deploy History Explorer"
        },
        {
          "id": "scLens.instructionTree",
          "name": "Instruction List",
          "when": "workspaceHasSolidity",
          "contextualTitle": "Solidity EVM Instruction Explorer"
        }
      ]
    }
  },
  "scripts": {
    "install:all": "npm install && npm --prefix ./webview-ui install ./webview-ui",
    "start:webview": "npm --prefix ./webview-ui run start",
    "test:webview": "npm --prefix ./webview-ui run test",
    "build:webview": "npm --prefix ./webview-ui run build",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/debug": "^4.1.7",
    "@types/glob": "^7.2.0",
    "@types/lru-cache": "^7.10.10",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/node-fetch": "^2.6.2",
    "@types/path-browserify": "^1.0.0",
    "@types/semver": "^7.3.10",
    "@types/string-similarity": "^4.0.0",
    "@types/vscode": "^1.68.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^7.19.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "@erebos/bzz-node": "^0.13.0",
    "@ethereumjs/tx": "^3.5.2",
    "@remix-project/remix-simulator": "^0.2.16",
    "await-notify": "^1.0.1",
    "axios": "^0.27.2",
    "ethereumjs-util": "^7.1.5",
    "ethers": "^5.7.0",
    "lru-cache": "^7.14.0",
    "semver": "^7.3.7",
    "solc": "^0.8.15",
    "string-similarity": "^4.0.4",
    "tslib": "^2.4.0",
    "vscode-languageclient": "^8.0.1",
    "vscode-languageserver": "^8.0.1",
    "vscode-languageserver-textdocument": "^1.0.5",
    "@vscode/debugadapter": "^1.56.0",
    "path-browserify": "^1.0.1",
    "web3": "^1.7.4"
  }
}
